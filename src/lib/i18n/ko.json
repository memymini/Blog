{
  "nav_about": "소개",
  "nav_projects": "프로젝트",
  "nav_experience": "경험",
  "nav_contact": "연락",
  "resume": "이력서",
  "hero_title": "Frontend Portfolio",
  "hero_sub": "빠르고 접근성 높은 웹앱을 만들고, 미세한 인터랙션을 섬세하게 다듬습니다. 단순한 구조, 강한 디테일.",
  "cta_projects": "프로젝트 보기",
  "cta_contact": "연락하기",
  "tech_title": "기술 스택",
  "about_title": "소개",
  "about_p1": "Next.js와 TypeScript에 집중하는 프론트엔드 엔지니어입니다. FSD 기반의 구조, 성능, 사용자 중심 디테일을 중요하게 생각합니다. 최근에는 스포츠 데이터 시각화에도 관심이 있습니다.",
  "highlights": "하이라이트",
  "highlight_1": "실서비스에서의 FSD 아키텍처",
  "highlight_2": "인증/미들웨어 패턴",
  "highlight_3": "GitHub Actions로 CI/CD",
  "projects_title": "프로젝트",
  "experience_title": "경력",
  "job1_role": "프론트엔드 엔지니어 (인턴)",
  "job1_org": "한화생명 IT",
  "job1_period": "2025.07 — 현재",
  "job1_b1": "Next.js로 사내 대시보드 구축",
  "job1_b2": "성능과 DX 개선",
  "job2_role": "학생 프로젝트",
  "job2_org": "동국대학교",
  "job2_period": "2023 — 2025",
  "job2_b1": "다수의 팀 프로젝트",
  "job2_b2": "깔끔한 UI와 접근성에 집중",
  "contact_title": "연락",
  "contact_blurb": "인턴/주니어 포지션에 열려 있어요. 사람들이 사랑하는 제품을 함께 만들고 싶습니다.",
  "contact_email": "이메일 보내기",
  "contact_github": "깃허브",
  "lang_toggle": "EN",
  "projects": [
    {
      "slug": "veribadge",
      "title": "Veribadge",
      "tagline": "온라인 자격 인증 서비스",
      "description": "온라인상에서 자격을 인증하고 여러 플랫폼과 연동해 사용할 수 있는 서비스입니다.",
      "tech": [
        "Next.js",
        "TypeScript",
        "Tailwind",
        "Zustand",
        "Tanstack Query"
      ],
      "image": "/images/veribadge.png",
      "detail": {
        "period": "2025.08 — 2025.09",
        "role": ["Frontend"],
        "links": [
          {
            "label": "GitHub",
            "href": "https://github.com/9oormthon-univ/2025_SEASONTHON_TEAM_60_FE.git"
          },
          { "label": "Live", "href": "https://veribadge.vercel.app" }
        ],
        "summary": "간단한 구조와 반응형 UI, 상태 분리를 강조한 투두 리스트 웹앱.",
        "responsibilities": [
          "FSD 구조 설계 및 폴더링",
          "Zustand로 UI 전역 상태 관리",
          "React Query로 서버 상태/캐시 관리",
          "접근성(키보드 내비게이션/aria) 개선"
        ],
        "architecture": [
          "FSD (entities/features/widgets/pages)",
          "React Query + Zustand 상태 경계",
          "다국어 라우팅 /[lang] 세그먼트"
        ],
        "challenges": [
          {
            "title": "Kakao Login(Oauth2 login)",
            "problem": "Redirect 시 URL에 # fragment를 써서 파싱 문제 발생",
            "solution": "결국 URL fragment 방식으로 토큰을 받고, 추가 파싱 로직 구현",
            "impact": "로그인 성공 및 로직 이해 심화"
          },
          {
            "title": "Api 호출시 경로 문제",
            "problem": "href로 페이지 이동은 정상 작동했지만, 새로고침 시 404 에러 발생.",
            "solution": "API 호출 주소를 localhost → 실제 서버 주소로 교체하자 정상 동작.",
            "impact": "CSR(클라이언트 라우팅)에서는 정상 작동해도, 새로고침(F5)은 SSR 요청이 서버까지 가므로 서버 라우팅 설정을 맞춰줘야 함"
          }
        ],
        "images": [
          { "src": "/images/veribadge.png", "alt": "veribadge 랜딩페이지" }
        ]
      }
    },
    {
      "slug": "modudo",
      "title": "Modudo",
      "tagline": "Todo List Web",
      "description": "Swipe to wish. Reduce toy waste by matching families who want to exchange toys.",
      "tech": ["Next.js", "TypeScript", "Tailwind", "Zustand", "React Query"],
      "image": "/images/modudo.png",
      "detail": {
        "period": "2025.03 — 2025.05",
        "role": ["Frontend"],
        "links": [
          { "label": "GitHub", "href": "https://github.com/your-id/modudo" },
          { "label": "Live", "href": "https://example.com/modudo" }
        ],
        "summary": "간단한 구조와 반응형 UI, 상태 분리를 강조한 투두 리스트 웹앱.",
        "responsibilities": [
          "FSD 구조 설계 및 폴더링",
          "Zustand로 UI 전역 상태 관리",
          "React Query로 서버 상태/캐시 관리",
          "접근성(키보드 내비게이션/aria) 개선"
        ],
        "architecture": [
          "FSD (entities/features/widgets/pages)",
          "React Query + Zustand 상태 경계",
          "다국어 라우팅 /[lang] 세그먼트"
        ],
        "challenges": [
          {
            "title": "생성 직후 목록 반영 지연",
            "problem": "생성 후 리스트가 즉시 갱신되지 않아 사용자 혼란 발생.",
            "solution": "mutation 성공 시 관련 queryKey 무효화 + 낙관적 업데이트 적용.",
            "impact": "체감 응답성 향상 및 불만 감소."
          }
        ],
        "images": [
          { "src": "/images/modudo.png", "alt": "Modudo 대시보드" },
          { "src": "/images/modudo.png", "alt": "Modudo 상세 화면" }
        ]
      }
    },
    {
      "slug": "study-dashboard",
      "title": "Study Dashboard",
      "tagline": "Goal tracking for study groups",
      "description": "Feature-Sliced dashboard with auth, role, and goal tracking.",
      "tech": ["Next.js", "TypeScript", "Tailwind", "React Query", "Zustand"],
      "detail": {
        "period": "2025.01 — 2025.03",
        "role": ["Frontend", "Infra"],
        "links": [
          { "label": "GitHub", "href": "https://github.com/your-id/study" }
        ],
        "summary": "스터디 권한/역할/목표 진행을 한 화면에서 관리하는 대시보드.",
        "responsibilities": [
          "목표 보드/필터/검색 컴포넌트",
          "JWT 인증 및 라우팅 가드",
          "CI/CD (GitHub Actions) 구성"
        ],
        "architecture": [
          "SSR/CSR 혼합 렌더링",
          "Query Key 규약과 invalidate 전략"
        ],
        "challenges": [
          {
            "title": "쿼리 키 충돌로 캐시 오염",
            "problem": "여러 목록이 동일 키를 사용해 필터 변경이 반영되지 않음.",
            "solution": "queryKey 유틸(goalQueryKeys.list(studyId, filters)) 도입.",
            "impact": "캐시 일관성 확보, 디버깅 시간 단축."
          }
        ],
        "images": [{ "src": "/projects/study-1.png", "alt": "Study 대시보드" }]
      }
    },
    {
      "slug": "wishntoss",
      "title": "wishntoss",
      "tagline": "Toy exchange app",
      "description": "Swipe-based matching to reduce toy waste by exchanging.",
      "tech": ["Next.js", "TypeScript", "Tailwind", "Zustand", "React Query"],
      "image": "/images/wishntoss-cover.png",
      "detail": {
        "period": "2024.03 — 2024.08",
        "role": ["Frontend", "Feature owner"],
        "links": [
          { "label": "Live", "href": "https://example.com/wishntoss" },
          { "label": "GitHub", "href": "https://github.com/your-id/wishntoss" }
        ],
        "summary": "스와이프 UX로 장난감 교환 상대를 매칭해 낭비를 줄이는 앱.",
        "responsibilities": [
          "홈/디테일/프로필/채팅 핵심 플로우",
          "이미지 업로드/최적화",
          "접근성 개선"
        ],
        "architecture": [
          "FSD 모듈화",
          "React Query(서버 상태) / Zustand(UI 상태) 분리",
          "미들웨어 라우팅 가드"
        ],
        "challenges": [
          {
            "title": "이미지 업로드 미리보기 지연",
            "problem": "FileReader 비동기 타이밍 문제로 썸네일 표시가 지연됨.",
            "solution": "미리보기는 base64 즉시 반영, 서버 업로드는 분리 + 낙관적 업데이트.",
            "impact": "응답성 향상, 실패 시 롤백으로 안정성 확보."
          }
        ],
        "images": [
          { "src": "/projects/wishntoss-1.png", "alt": "wishntoss 홈" },
          { "src": "/projects/wishntoss-2.png", "alt": "wishntoss 상세" }
        ]
      }
    }
  ]
}
