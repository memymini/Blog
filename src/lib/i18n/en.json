{
  "nav_about": "About",
  "nav_projects": "Projects",
  "nav_experience": "Experience",
  "nav_contact": "Contact",
  "resume": "Resume",
  "hero_title": "Portfolio",
  "hero_sub": "A developer who contemplates efficient code and optimized structures, solving problems through communication.",
  "cta_projects": "View Projects",
  "cta_contact": "Contact Me",
  "tech_title": "Skills",
  "about_title": "About Me",
  "about_p1": "I am a developer who meticulously prepares for not only the main features but also for exceptional cases. I am highly interested in optimization through code structure and refactoring, and I also have a solid understanding of server operations. Above all, I value solving problems and growing together through communication.",
  "highlights": "Highlights",
  "highlight_1": "FSD Architecture in a Live Service",
  "highlight_2": "Authentication/Middleware Patterns",
  "highlight_3": "CI/CD with GitHub Actions",
  "projects_title": "Projects",
  "experience_title": "Experience",
  "jobs": [
    {
      "role": "Goormthon",
      "org": "Goormthon Univ",
      "period": "2025.08 — 2025.09",
      "bullets": [
        "Developed 'Veribadge', an online qualification verification service"
      ]
    },
    {
      "role": "Frontend Bootcamp (FESI)",
      "org": "Codeit",
      "period": "2025.07 — 2025.08",
      "bullets": [
        "Developed a team-study based Todo List web service",
        "Experienced collaboration with backend developers and designers"
      ]
    },
    {
      "role": "Capstone Design",
      "org": "Dongguk University",
      "period": "2025.03 — 2025.12",
      "bullets": [
        "Developed an ITSM (Service Desk) system migration project to MSW"
      ]
    },
    {
      "role": "Exchange Student",
      "org": "Fontys University of Applied Sciences",
      "period": "2024.09 — 2025.01",
      "bullets": [
        "Developed a mobile solution to enhance user engagement for Efteling theme park",
        "Developed a mobile platform for handling discarded toys at home",
        "Developed a quiz-based app to address cultural polarization issues"
      ]
    },
    {
      "role": "Campusthon",
      "org": "Dongguk University",
      "period": "2024.08",
      "bullets": [
        "Developed the frontend for 'O-Gong-Challenge', a daily challenge app for students with empty class slots (Grand Prize)"
      ]
    },
    {
      "role": "Open Source SW Project",
      "org": "Dongguk University",
      "period": "2024.03 — 2024.06",
      "bullets": [
        "Developed 'GENTLE (Generate Neutral News)', a service providing politically neutral news articles"
      ]
    },
    {
      "role": "Toy Project",
      "org": "LG Science Park",
      "period": "2023.09 — 2023.10",
      "bullets": [
        "Participated in developing 'Byeolse', a blockchain-based last will and testament service"
      ]
    },
    {
      "role": "SWF (Seoul Web3 Festival)",
      "org": "Seoul Metropolitan Government",
      "period": "2023.07 — 2023.08",
      "bullets": [
        "Participated in developing 'GibuRun', a blockchain-based donation service"
      ]
    }
  ],
  "contact_title": "Contact",
  "contact_blurb": "I'm open to intern/junior positions. I want to build products that people love, together.",
  "contact_email": "Send Email",
  "contact_github": "GitHub",
  "lang_toggle": "KR",
  "detail_back_to_projects": "← Back to Projects",
  "detail_team_size": "Team of {size}",
  "detail_summary_title": "Summary",
  "detail_built_title": "Responsibilities",
  "detail_arch_title": "Architecture",
  "detail_challenges_title": "Challenges & Solutions",
  "detail_problem": "Problem",
  "detail_cause": "Cause",
  "detail_solution": "Solution",
  "detail_impact": "Result",
  "detail_lessons": "Lessons Learned",
  "detail_screenshots_title": "Screenshots",
  "projects": [
    {
      "slug": "veribadge",
      "title": "Veribadge",
      "tagline": "Online Qualification Verification Service",
      "description": "A service that allows users to verify their qualifications online and use them in conjunction with various platforms.",
      "tech": [
        "Next.js",
        "TypeScript",
        "Tailwind",
        "Zustand",
        "Tanstack Query"
      ],
      "image": "/images/veribadge.png",
      "detail": {
        "period": "2025.08 — 2025.09",
        "role": ["Frontend"],
        "teams": "1 Frontend / 3 Backend / 1 Planner",
        "links": [
          {
            "label": "GitHub",
            "href": "https://github.com/9oormthon-univ/2025_SEASONTHON_TEAM_60_FE.git"
          },
          { "label": "Live", "href": "https://veribadge.vercel.app" }
        ],
        "summary": "A service that allows users to prove their qualifications on social platforms flooded with AI-generated comments and spam bots. Users upload certificates (e.g., medical license, proof of income) to generate a badge tag. When this tag is used in a comment and the browser extension is installed, the tag is converted into a badge for other users to see.",
        "responsibilities": [
          "Designed routing and set up the development environment based on Next.js App Router.",
          "Managed server state and caching with TanStack Query.",
          "Set up API mocking and the development environment using MSW (Mock Service Worker).",
          "Implemented common loading/error handling through custom fetch, query, and mutation functions.",
          "Implemented key features for each page.",
          "Implemented Kakao social login.",
          "Deployed to Vercel."
        ],
        "architecture": [
          "Next.js App Router structure",
          "Established state boundaries using TanStack Query + custom fetch/query/mutation functions.",
          "Separated development/testing environments based on MSW."
        ],
        "challenges": [
          {
            "title": "Deciding on Kakao Login Token Transmission and Parsing Method",
            "problem": "After Kakao login, the token transmission path was unclear, leading to issues where the token couldn't be read during the SSR/middleware stage or was missed during frontend parsing.",
            "causes": [
              "Token sent in the Body during backend-to-frontend redirect was inaccessible on the frontend.",
              "HttpOnly Cookie could not be shared due to domain constraints.",
              "Parsing issues occurred when using a # fragment in the URL upon redirect."
            ],
            "resolution": [
              "The initial plan (backend processes login, then frontend makes an additional request) was postponed due to time/implementation costs.",
              "Safely parsed the fragment on the callback page, stored the token, and then removed the hash using router.replace."
            ],
            "lessons": [
              "Constraints such as hidden redirect bodies, cookie Domain/SameSite attributes, CORS, and SSR/CSR differences must be pre-emptively considered in the token strategy.",
              "Learned the difference between `?query` vs. `#fragment` in OAuth redirects."
            ]
          },
          {
            "title": "API Call Path Confusion Issue",
            "problem": "Page navigation via `href` worked correctly, but a 404 error occurred upon refresh.",
            "causes": [
              "Occurred due to a mismatch between the client-side route (e.g., /page) and the actual server-side route configuration.",
              "In the local dev environment, `http://localhost:3000/page` is handled by Next.js, but in the production environment, the server tries to find `/page` directly, resulting in a 404."
            ],
            "resolution": [
              "The issue was resolved by replacing the API call address from `localhost` to the actual server address."
            ],
            "lessons": [
              "Even if CSR (client-side routing) works, a page refresh (F5) sends an SSR request to the server, so server-side routing must be configured accordingly.",
              "API paths (e.g., `/api/...`) and page paths (e.g., `/page`) must be distinguished and called with the correct addresses."
            ]
          }
        ],
        "images": [
          {
            "src": "/images/veribadge-1.png",
            "alt": "Veribadge badge management page"
          },
          { "src": "/images/veribadge-2.png", "alt": "Veribadge dashboard" },
          {
            "src": "/images/veribadge-3.png",
            "alt": "Veribadge verification center"
          },
          { "src": "/images/veribadge-4.png", "alt": "Veribadge file upload" }
        ]
      }
    },
    {
      "slug": "modudo",
      "title": "Modudo",
      "tagline": "Team Study-Based Todo List Service",
      "description": "A service for creating study groups, setting study goals, and sharing the corresponding Todo Lists and progress.",
      "tech": [
        "Next.js",
        "TypeScript",
        "Tailwind",
        "Zustand",
        "Tanstack Query"
      ],
      "image": "/images/modudo.png",
      "detail": {
        "period": "2025.07 — 2025.08",
        "role": ["Frontend"],
        "teams": "4 Frontend / 2 Backend / 1 Designer",
        "links": [
          {
            "label": "GitHub",
            "href": "https://github.com/CODEIT-FESI-10-5/frontend.git"
          },
          { "label": "Live", "href": "https://modudu.vercel.app" }
        ],
        "summary": "A study management service for small groups. Users can create a study and invite members, or join an existing study. They can set common study goals, create Todo Lists, and check the progress of other members.",
        "responsibilities": [
          "Implemented Login/Signup, Sidebar, and My Page features.",
          "Implemented responsive design.",
          "Managed global UI state with Zustand.",
          "Managed server state and caching with Tanstack Query.",
          "Deployed to Vercel."
        ],
        "architecture": [
          "FSD (Feature-Sliced Design: entities/features/widgets/pages)",
          "State management with React Query + Zustand"
        ],
        "challenges": [
          {
            "title": "HttpOnly Cookie Domain Mismatch Issue",
            "problem": "Encountered an issue where the token would disappear when navigating to another page after being fetched from middleware.",
            "causes": [
              "The backend server used a subdomain while the frontend used the main domain, but the backend set the cookie's domain to the subdomain, causing a mismatch."
            ],
            "resolution": [
              "Adjusted the cookie's `Domain` attribute to the main domain, making it accessible across all subdomains."
            ],
            "lessons": [
              "Deepened understanding of login session persistence and domain/cookie policies."
            ]
          },
          {
            "title": "TanStack Query Data Synchronization Issue",
            "problem": "Changes made on the dashboard were not immediately reflected in the sidebar.",
            "causes": [
              "The sidebar and dashboard used the same data but called different APIs and lacked proper cache handling.",
              "The sidebar was located in the root layout, so it didn't re-render on page navigation."
            ],
            "resolution": [
              "When data on the dashboard was changed, the related sidebar query was invalidated using `invalidateQuery` to sync with the latest data."
            ],
            "lessons": [
              "Learned the importance of query invalidation and state synchronization to ensure data consistency."
            ]
          }
        ],
        "images": [
          { "src": "/images/modudo-1.png", "alt": "Modudo dashboard" },
          { "src": "/images/modudo-2.png", "alt": "Modudo my page" }
        ]
      }
    }
  ]
}
